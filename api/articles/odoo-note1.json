{"title":"在odoo ir.rule的domain中添加字段","uid":"49674afba8c6e39bd46275a6d44f9a9b","slug":"odoo-note1","date":"2021-09-26T10:13:08.000Z","updated":"2021-09-26T10:20:00.183Z","comments":true,"path":"api/articles/odoo-note1.json","keywords":null,"cover":null,"content":"<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><p>在odoo的xml中用许多地方会用到domain，但是会存在无法满足自己需求的字段，<br>比如说在编写规则时需要员工信息(employee)或者在xml定义action时需要用到员工信息</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>domain_force<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>[('employee_id', '=', employee.id)]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>domain<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>[('employee_id', '=', employee.id)]<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h3><p>可以继承ir.rule模型，在它的_eval_context()方法中添加</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">IrRuleInherit</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    _inherit <span class=\"token operator\">=</span> <span class=\"token string\">'ir.rule'</span>\n\n    <span class=\"token decorator annotation punctuation\">@api<span class=\"token punctuation\">.</span>model</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_eval_context</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        res <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>IrRuleInherit<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_eval_context<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        res<span class=\"token punctuation\">[</span><span class=\"token string\">'employee'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span><span class=\"token string\">'hr.employee'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sudo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                                                                 <span class=\"token punctuation\">(</span><span class=\"token string\">'company_id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>company<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> res<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样就可以使用在视图中使用employee的信息了</p>\n","feature":true,"text":"应用场景在odoo的xml中用许多地方会用到domain，但是会存在无法满足自己需求的字段，比如说在编写规则时需要员工信息(employee)或者在xml定义action时需要用到员工信息 &lt;field name=\"domain_force\">[('employee_id'...","link":"","photos":[],"count_time":{"symbolsCount":701,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"odoo","slug":"odoo","count":1,"path":"api/tags/odoo.json"},{"name":"domain","slug":"domain","count":1,"path":"api/tags/domain.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">解决</span></a></li></ol></li></ol>","author":{"name":"Kone Qin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"懒人的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"about me","uid":"acc23e6efab4e2cee0d3170938ecffa1","slug":"about-me","date":"2021-09-26T02:51:42.000Z","updated":"2021-09-26T03:02:09.430Z","comments":true,"path":"api/articles/about-me.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"Diary","slug":"Diary","count":1,"path":"api/categories/Diary.json"}],"tags":[{"name":"me","slug":"me","count":1,"path":"api/tags/me.json"},{"name":"too","slug":"too","count":1,"path":"api/tags/too.json"}],"author":{"name":"Kone Qin","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"懒人的博客","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}